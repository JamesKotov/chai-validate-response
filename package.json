{
  "name": "chai-validate-response",
  "version": "0.0.1",
  "description": "A chai assertion plugin for validating Responses with a Swagger / OAI schema",
  "main": "index.js",
  "scripts": {
    "test": "mocha --compilers js:babel-core/register",
    "lint": "eslint  --ignore-path .gitignore ."
  },
  "repository": {
    "type": "git",
    "url": "github.com/tmf/chai-validate-request"
  },
  "keywords": [
    "chai",
    "validate",
    "z-schema",
    "swagger",
    "oai",
    "api",
    "response"
  ],
  "author": "Tom Forrer <tom.forrer@gmail.com> (github.com/tmf)",
  "license": "MIT",
  "engines": {
    "node": ">=4.2.0"
  },
  "dependencies": {
    "swagger-parser": "^3.4.1",
    "z-schema": "^3.17.0"
  },
  "devDependencies": {
    "babel-core": "^6.10.4",
    "babel-preset-es2015": "^6.9.0",
    "chai": "^3.5.0",
    "eslint": "^2.13.1",
    "eslint-config-eslint": "^3.0.0",
    "ghooks": "^1.2.4",
    "mocha": "^2.5.3",
    "validate-commit-msg": "^2.6.1",
    "whatwg-fetch": "^1.0.0"
  },
  "config": {
    "validate-commit-msg": {
      "helpMessage": "\n-----------\n\nThere was a small validation problem with your commit message:\n\n> %s\n\nIt's not a huge problem, but a valid commit message will ensure\nwhether your commit triggers a release or not (and sometimes the\ncommit won't need to trigger a commit). If you really need to, you\ncan skip the validation using `git commit --no-verify`.\n\nIf your commit is a fix, it might want to be:\n\n> fix: storage bug\n\nOr a feature:\n\n> feat: added new storage process\n\nThere's also `docs`, `test` and `chore` and a few more. To read\nhow the commit message should be formatted, please see this short\npost: https://git.io/v2Nnm\n"
    },
    "ghooks": {
      "pre-commit": "npm run lint",
      "commit-msg": "validate-commit-msg",
      "pre-push": "npm test",
      "post-merge": "npm install",
      "post-rewrite": "npm install"
    }
  },
  "eslintConfig": {
    "env": {
        "browser": true,
        "es6": true,
        "node": true,
        "mocha": true
    },
    "extends": "eslint:recommended",
    "parserOptions": {
        "sourceType": "module"
    },
    "rules": {
        "indent": [
            "error",
            4
        ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "quotes": [
            "error",
            "double"
        ],
        "semi": [
            "error",
            "always"
        ]
    }
  }
}
